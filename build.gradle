plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.1.RELEASE'
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'

group 'com.dyukov.taxi'
version '1.1-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/plugins-release/" }
    maven { url "http://repo.spring.io/libs-release" }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-dependencies:2.1.1.RELEASE'
    compile 'io.jsonwebtoken:jjwt:0.9.1'
    compile 'org.passay:passay:1.5.0'
    compile 'org.springframework.boot:spring-boot-starter-parent:2.1.1.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-security:2.1.1.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-web:2.1.1.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa:2.1.1.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf:2.1.1.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-mail:2.1.1.RELEASE'
    compile group: 'com.microsoft.sqlserver', name: 'sqljdbc4', version: '4.0'
    compile 'org.modelmapper:modelmapper:2.3.5'

    compile('javax.servlet:jstl:1.2')

    compile('org.springframework.boot:spring-boot-starter-tomcat:2.2.0.RELEASE')
    compile('org.apache.tomcat.embed:tomcat-embed-jasper:9.0.27')


    compile('io.springfox:springfox-swagger2:2.9.2')
    compile('io.springfox:springfox-swagger-ui:2.9.2')
    compile('io.springfox:springfox-bean-validators:2.9.2')

    testCompile group: 'junit', name: 'junit', version: '4.12'

    components {
        withModule('org.springframework:spring-beans') {
            allVariants {
                withDependencyConstraints {
                    // Need to patch constraints because snakeyaml is an optional dependency
                    it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.19' } }
                }
            }
        }
    }
}

bootJar {
    launchScript()
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version,
                'Main-Class': 'com.dyukov.taxi.SpringBootTaxiServiceApplication'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}